{"ast":null,"code":"const validURL = str => {\n  const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(str);\n};\n\nconst findLinkEntities = (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges(character => {\n    const entityKey = character.getEntity();\n    return entityKey !== null && contentState.getEntity(entityKey).getType() === 'LINK';\n  }, callback);\n};\n\nexport { validURL, findLinkEntities };","map":{"version":3,"sources":["/Users/gabriel/code/note-taking/client/src/utils.js"],"names":["validURL","str","urlregex","test","findLinkEntities","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","getType"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,GAAD,IAAS;AACtB,QAAMC,QAAQ,GAAG,4TAAjB;AACA,SAAOA,QAAQ,CAACC,IAAT,CAAcF,GAAd,CAAP;AACH,CAHD;;AAKA,MAAMG,gBAAgB,GAAG,CAACC,YAAD,EAAeC,QAAf,EAAyBC,YAAzB,KAA0C;AAC/DF,EAAAA,YAAY,CAACG,gBAAb,CACKC,SAAD,IAAe;AACX,UAAMC,SAAS,GAAGD,SAAS,CAACE,SAAV,EAAlB;AACA,WACID,SAAS,KAAK,IAAd,IACAH,YAAY,CAACI,SAAb,CAAuBD,SAAvB,EAAkCE,OAAlC,OAAgD,MAFpD;AAIH,GAPL,EAQIN,QARJ;AAUH,CAXD;;AAaA,SAASN,QAAT,EAAmBI,gBAAnB","sourcesContent":["const validURL = (str) => {\n    const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n    return urlregex.test(str);\n}\n\nconst findLinkEntities = (contentBlock, callback, contentState) => {\n    contentBlock.findEntityRanges(\n        (character) => {\n            const entityKey = character.getEntity();\n            return (\n                entityKey !== null &&\n                contentState.getEntity(entityKey).getType() === 'LINK'\n            );\n        },\n        callback\n    );\n}\n\nexport { validURL, findLinkEntities }"]},"metadata":{},"sourceType":"module"}